<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="/static/bootstrap/css/bootstrap.min.css" type="text/css">
    <script src="/static/jquery.js"></script>
    <script src="/static/bootstrap/js/bootstrap.min.js"></script>
    <link rel="stylesheet" href="/static/css/control.css" type="text/css">
    <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.15.4/css/all.css" 
        integrity="sha384-DyZ88mC6Up2uqS4h/KRgHuoeGwBcD4Ng9SiP4dIRy0EXTlnuz47vAwmeGwVChigm" 
        crossorigin="anonymous">
    <title>CPS APPLICATION</title>
</head>
<body>
    <div class="container-fluid">
        <div class="row">
            <div class="col banner">
                APP CPS
            </div>
        </div>
        <div class="row">
            <!-- Camera -->
            <div class="col-sm-9 camera-follow">
                <iframe class="camera" src="https://www.youtube.com/embed/PkPkS7zCC9I" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>
            </div>

            <!-- Remote Design -->
            <div class="col-sm-3 remote-control">
                <div class="row">
                    <div class="col header-remote">
                        <i class="fas fa-angle-double-right"></i>
                        <span>REMOTE CONTROL</span>
                        <hr>
                    </div>
                    <div class="w-100"></div>
                    <div class="col">
                        <p>Chose mode</p>
                        <select class="form-select" aria-label="Default select example">
                            <option selected>Select mode control</option>
                            <option value="1">online remote</option>
                            <option value="2">auto fly</option>
                          </select>
                        <button type="button" class="btn btn-success btn-chose-mode">Success</button>
                        <hr>
                    </div>
                    <div class="w-100"></div>
                    <div class="col">
                        <p>Take off and land</p>
                        <div class="btn-group" role="group" aria-label="Basic example">
                            <button id="takeoff" type="button" class="btn btn-primary">Take off</button>
                            <button id="land" type="button" class="btn btn-primary">Land</button>
                        </div>
                        <hr>
                    </div>
                    <div class="w-100"></div>
                    <div class="col">
                        <p>Attitude: <span>15m</span></p>
                        <button id='up' class="btn btn-primary"><i class="fas fa-arrow-up"></i></button>
                        <button id='down' class="btn btn-primary"><i class="fas fa-arrow-down"></i></button>
                        <hr>
                    </div>
                    <div class="w-100"></div>
                    <div class="col">
                        <p>Remote joystick</p>
                        <div class="remote-joysticks">
                            <div>
                                <button id="forward" class="btn btn-primary"><i class="fas fa-arrow-up"></i></button>
                            </div>
                            <div>
                                <button id='left' class="btn btn-primary"><i class="fas fa-arrow-left"></i></button>
                                <button id='backward' class="btn btn-primary"><i class="fas fa-arrow-down"></i></button>
                                <button id='right' class="btn btn-primary"><i class="fas fa-arrow-right"></i></button>
                            </div>
                        </div>
                        <hr>
                    </div>
                    <div class="w-100"></div>
                    <div class="col">
                        <p>Camera control</p>
                        <div class="remote-joysticks">
                            <button id='yawleft' class="btn btn-primary"><i class="fas fa-arrow-left"></i></button>
                            <button id='yawright' class="btn btn-primary"><i class="fas fa-arrow-right"></i></button>
                        </div>
                        <hr>
                    </div>
                  </div>
            </div>
        </div>
    </div>
</body>
<script>
    const takeoff = document.getElementById('takeoff')
    const land = document.getElementById('land')
    const forward = document.getElementById('forward')
    const left = document.getElementById('left')
    const backward = document.getElementById('backward')
    const right = document.getElementById('right')
    const up = document.getElementById('up')
    const down = document.getElementById('down')
    const yawleft = document.getElementById('yawleft')
    const yawright = document.getElementById('yawright')
    //Publish data
    async function postData(url = '', data = {}) {
    // Default options are marked with *
    const response = await fetch(url, {
        method: 'POST', // *GET, POST, PUT, DELETE, etc.
        mode: 'cors', // no-cors, *cors, same-origin
        cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached
        credentials: 'same-origin', // include, *same-origin, omit
        headers: {
        'Content-Type': 'application/json'
    },
        redirect: 'follow', // manual, *follow, error
        referrerPolicy: 'no-referrer', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url
        body: JSON.stringify(data) // body data type must match "Content-Type" header
    });
    return response.json(); // parses JSON response into native JavaScript objects
}
    takeoff.addEventListener('click', ()=>{
        data = {status: "takeoff"}
        postData('https://minh-api.herokuapp.com/api/v1/publish', data)
    })
    land.addEventListener('click', ()=>{
        data = {status: "land"}
        postData('https://minh-api.herokuapp.com/api/v1/publish', data)
    })
    // Forward
    forward.addEventListener('mousedown', ()=>{
        data = {control: "forward"}
        postData('https://minh-api.herokuapp.com/api/v1/publish', data)
    })
    forward.addEventListener('mouseup', ()=>{
        data = {control: 0}
        postData('https://minh-api.herokuapp.com/api/v1/publish', data)
    })
    //Left
    left.addEventListener('mousedown', ()=>{
        data = {control: "left"}
        postData('https://minh-api.herokuapp.com/api/v1/publish', data)
    })
    left.addEventListener('mouseup', ()=>{
        data = {control: 0}
        postData('https://minh-api.herokuapp.com/api/v1/publish', data)
    })

    //Backward
    backward.addEventListener('mousedown', ()=>{
        data = {control: "backward"}
        postData('https://minh-api.herokuapp.com/api/v1/publish', data)
    })
    backward.addEventListener('mouseup', ()=>{
        data = {control: 0}
        postData('https://minh-api.herokuapp.com/api/v1/publish', data)
    })

    //Right
    right.addEventListener('mousedown', ()=>{
        data = {control: "right"}
        postData('https://minh-api.herokuapp.com/api/v1/publish', data)
    })
    right.addEventListener('mouseup', ()=>{
        data = {control: 0}
        postData('https://minh-api.herokuapp.com/api/v1/publish', data)
    })
    //Up
    up.addEventListener('mousedown', ()=>{
        data = {control: "up"}
        postData('https://minh-api.herokuapp.com/api/v1/publish', data)
    })
    up.addEventListener('mouseup', ()=>{
        data = {control: 0}
        postData('https://minh-api.herokuapp.com/api/v1/publish', data)
    })
    //Down
    down.addEventListener('mousedown', ()=>{
        data = {control: "down"}
        postData('https://minh-api.herokuapp.com/api/v1/publish', data)
    })
    down.addEventListener('mouseup', ()=>{
        data = {control: 0}
        postData('https://minh-api.herokuapp.com/api/v1/publish', data)
    })
    //Yawleft
    yawleft.addEventListener('mousedown', ()=>{
        data = {control: "yawleft"}
        postData('https://minh-api.herokuapp.com/api/v1/publish', data)
    })
    yawleft.addEventListener('mouseup', ()=>{
        data = {control: 0}
        postData('https://minh-api.herokuapp.com/api/v1/publish', data)
    })
    //yawright
    yawright.addEventListener('mousedown', ()=>{
        data = {control: "yawright"}
        postData('https://minh-api.herokuapp.com/api/v1/publish', data)
    })
    yawright.addEventListener('mouseup', ()=>{
        data = {control: 0}
        postData('https://minh-api.herokuapp.com/api/v1/publish', data)
    })
</script>
</html>